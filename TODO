[𐄂] Load outbox of users and parse latest posts
[𐄂] Write these posts to local file
    (normally we would need to sort by time but this is a 
    temporary solution until we really follow the actors 
    and get notifications in timely manner)
[✔] Follow users
[✔] Announcements (read up how boost json looks like)
[✔] Federate the post to our followers (hardcoded for now)
[✔] Actor should have pubActor not the other way around
[✔] Handle more than one local actors
[✔] Fix the json to host those multiple actors
[✔] Fix the json unmarshalling code to read multiple actors
[✔] Handle the /actor endpoint
[✔] Create configuration file
[✔] Implement database backend
    [✔] Create a file with the actors we have, their following
        and their followers.
        [✔] `MakeActor` should create a file with that actor.
        [✔] Implement `LoadActor`
        [✔] All but `main.go` should run LoadActor instead of MakeActor
            (Actually nobody should run LoadActor except GetActor)
        [✔] `actor.Follow` should write the new following to file
        [✔] Handle being followed
        [✔] When followed, the handler should write the new follower to file
        [✔] Make sure we send our boosts to all our followers
            Code is there but it works sometimes (I hate when this happens)
        [✔] Check why I get calls to get with an id that consists only of an actor's name
        [✔] Implement `db.followers` and `db.following`
[✔] Write all the announcements (boosts) to the database to 
    their correct actors
[✔] Check if we are already following users
[✔] On GetOutbox read the database and present a list of the
    last posts.
[✔] Make OS-independent (mosty directory separators)
[✔] Create outbox.json programmatically
[✔] Make storage configurable (search for "storage" in project)
[✔] Check if we're boosting only stuff from actors we follow, not whatever comes
    through in our inbox
[✔] Boost not only articles but other things too
[✔] Handle post uri's
[✔] Sanitize input, never allow slashes or dots
[✔] Add summary to actors.json
[✔] Check local actor names for characters illegal for filenames and ban them
[✔] Create debug flag
[✔] Write to following only upon accept
    (waiting to actually get an accept so that I can test this)
[✔] Implement webfinger
[✔] Fix outbox json to look like the other softwares
[✔] Make sure masto finds signature
[~] Implement Unfollow (it doesn't work)
[✔] Implement accepting others unfollowing us
[✔] Implement accept (accept when other follow us)
    (done but can't test it pending http signatures)
    Works in pleroma/pixelfed not working on masto
    (nothing works on masto)
[✔] Accept even if already follows us
[✔] Handle http signatures
[✔] masto can't find the signature
[𐄂] Why doesn't our outbox being fetched by others
    Possibly this is okay, only the things with them as receipients show
[✔] Decide what's to be done with actors removed from `actors.json`.
    [✔] Remove them?
    [𐄂] Leave them read-only?
    [𐄂] Leave them as is?
[𐄂] Check if an early failure in announcing posts causes a problem to the following ones
[✔] Handle followers and following uri's
[𐄂] Do I care about the inbox?
[𐄂] Maybe look at implementing lock files?
[𐄂] Check if it's worth it to reuse pubActor instead of creating
    a new one every time
[𐄂] Change the following from map[string]interface{} to map[string]string
    This breaks the json unmarshalling so it stays like this.
[✔] Make sure we never show <actor>.json to the public
[✔] Do not announce replies if an option is set in config.ini
[✔] Fix Announce activities to be shown at their endpoint instead of 404
[✔] If they reject you, don't try again
[✔] Do not boost things not posted from people we follow
[ ] Throw an error when JSON is malformed
[ ] Refactor, comment and clean up
[ ] Make unfollowing actually federate

[ ] Allow overriding replies boosting from actors.json for each actor
[ ] Fix outbox to not include follows 
    go-fed adds follows to the outbox but mastodon uses the TotalItems property
    to show total toots so it probably doesn't expect the follows to be included.
    It's some work to fix this and the discrepancy will be small in the long run
    (few follows compared to toots) so I'm leaving it for now
[ ] There are three different styles of building activities, using vocab, strings, or maps. Choose one and stick with it.
[ ] Move config variables to config.<val> namespace
[ ] Verify http signatures
[ ] Implement db.Update
[ ] Implement db.Delete
[ ] Handle paging
[ ] Split to pherephone and activityServe
[ ] Implement following by mention
    (check signature and add an admin id in the config. Mentions from that account should be allowed to admin stuff)
[ ] Implement nodeinfo and statistics